<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper  namespace="com.itliyue.dao.IUserDao">
<!--        如果实体类的变量和书库表中的属性不一致时，可以设置resultMap属性或者在条件查询语句里面给每个字段设置别名-->
    <!--<resultMap id="userMap" type="com.itliyue.domain.User2">
        &lt;!&ndash;主键字段的对应&ndash;&gt;
        <id property="userID" column="id"></id>
        <result property="userName" column="username"></result>
        <result property="userBirthday" column="birthday"></result>
        <result property="userSex" column="sex"></result>
        <result property="userAddress" column="address"></result>
    </resultMap>
-->
<!--    映射配置文件-->
   <!-- 查询所有-->
 <!--   <select id="findAll" resultMap="userMap"></select>-->
    <select  id="findAll"  resultType="User">  /*方法名称  和要封装的对象*/
      select * from user;
    </select>
    <!--保存用户-->
    <insert id="saveUser"   parameterType="User">

        insert into user (username,birthday,sex,address)  values(#{username},#{birthday},#{sex},#{address});

    </insert>
       <!--修改用户-->
    <update id="updateUser" parameterType="User" >
        update  user set username=#{username},birthday=#{birthday}, sex=#{sex},address=#{address} where id=#{id}
    </update>

<!--    根据id查找用户-->
<select id="findUser" parameterType="int" resultType="User">
    select*from user where id=#{xxxxx}

</select>
   <!--    根据id删除用户-->
<update id="deleteUser" parameterType="int" >
    delete  from user where  id=#{xxxx};

</update>


   <!--    模糊查询-->
<select id="findByname" parameterType="User" resultType="User">
    select *from  user where username like #{user};
</select>

       <!--查询总记录数-->
<select id="findTotal"  resultType="int">
    select count(*) from user;

</select>




     <!--  根据queryvo的条件查询用户-->
    <select id="findUserByvo" parameterType="Quervo" resultType="user">
        select *from user where  username like #{user.username}
    </select>



</mapper>